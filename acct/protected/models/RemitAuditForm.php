<?php

class RemitAuditForm extends ExpenseAuditForm
{
    public $jd_curl_type;//金蝶curl类型
    protected $table_type=2;
    protected $fileList=array(
        array("field_id"=>"outside","field_type"=>"list","field_name"=>"outside","display"=>"none"),//外部
        array("field_id"=>"payee_code","field_type"=>"text","field_name"=>"payee_code","display"=>"none"),//供应商编号
        array("field_id"=>"payee","field_type"=>"text","field_name"=>"payee","display"=>"none"),//收款单位
        array("field_id"=>"taxpayer_no","field_type"=>"text","field_name"=>"taxpayer no","display"=>"none"),//纳税人识别号
        array("field_id"=>"bank_name","field_type"=>"text","field_name"=>"bank name","display"=>"none"),//开户行名称
        array("field_id"=>"bank_no","field_type"=>"text","field_name"=>"bank no","display"=>"none"),//银行帐号

        array("field_id"=>"urgent","field_type"=>"list","field_name"=>"urgent","display"=>"none"),//加急
        array("field_id"=>"end_pay_date","field_type"=>"text","field_name"=>"end pay date","display"=>"none"),//最晚付款日
        array("field_id"=>"invoice_bool","field_type"=>"list","field_name"=>"invoice bool","display"=>"none"),//发票情况
        array("field_id"=>"invoice_no","field_type"=>"text","field_name"=>"invoice no","display"=>"none"),//发票号码

        array("field_id"=>"prepayment","field_type"=>"list","field_name"=>"prepayment","display"=>"none"),//预付款
        array("field_id"=>"purchase_type","field_type"=>"list","field_name"=>"purchase type","display"=>"none"),//是否采购单
        array("field_id"=>"purchase_code","field_type"=>"list","field_name"=>"purchase code","display"=>"none"),//采购单编号
        array("field_id"=>"payment_condition","field_type"=>"list","field_name"=>"payment condition","display"=>"none"),//付款条件
        array("field_id"=>"payment_company","field_type"=>"list","field_name"=>"payment company","display"=>"none"),//支付公司
    );

    public function rules()
    {
        $list = parent::rules();
        $list[]=array('exp_code','validatePre','on'=>array("audit"));//
        return $list;
    }

    public function validatePre($attribute, $params) {
        $uid = Yii::app()->user->id;
        if(!empty($this->audit_json)){
            foreach ($this->audit_json as $row){
                if($row["audit_tag"]=="财务部"&&$row["audit_user"]==$uid){
                    $this->finance_bool = true;
                    if($this->tableDetail["purchase_type"]!="A0"&&empty($this->tableDetail["payee_code"])){
                        $this->addError($attribute, "供应商编码不能为空");
                    }
                    if(!isset($this->tableDetail["prepayment"])||$this->tableDetail["prepayment"]===""||$this->tableDetail["prepayment"]===null){
                        $this->addError($attribute, "请选择预付款");
                    }
                }
            }
        }
    }

    public function retrieveData($index)
    {
        $bool = parent::retrieveData($index); // TODO: Change the autogenerated stub
        if($bool&&!empty($this->audit_json)){
            $uid = Yii::app()->user->id;
            foreach ($this->audit_json as $row){
                if($row["audit_tag"]=="财务部"&&$row["audit_user"]==$uid){
                    $this->finance_bool = true;
                }
            }
        }
        return $bool;
    }

    protected function saveDataForSql(&$connection)
    {
        if($this->finance_bool){//财务部允许修改预付款
            $saveList = array("payee_code","prepayment");
            foreach ($saveList as $item){
                $field_value = key_exists($item,$this->tableDetail)?$this->tableDetail[$item]:null;
                $rs = Yii::app()->db->createCommand()->select("id,field_id")->from("acc_expense_detail")
                    ->where("exp_id=:exp_id and field_id=:field_id",array(
                        ':field_id'=>$item,':exp_id'=>$this->id,
                    ))->queryRow();
                if($rs){
                    $connection->createCommand()->update('acc_expense_detail',array(
                        "field_value"=>$field_value,
                    ),"id=:id",array(':id'=>$rs["id"]));
                }else{
                    $connection->createCommand()->insert('acc_expense_detail',array(
                        "exp_id"=>$this->id,
                        "field_id"=>$item,
                        "field_value"=>$field_value,
                    ));
                }
            }
        }

        return parent::saveDataForSql($connection); // TODO: Change the autogenerated stub
    }

    protected function setAuditFinish(){
        $this->current_num++;
        $auditUser = explode(",",$this->audit_user);
        if(count($auditUser)>$this->current_num){
            //需要继续审核
            $this->current_username = $auditUser[$this->current_num];
        }else{
            //审核完成
            $this->resetStatusTypeForPurchase();
        }
    }

    protected function resetStatusTypeForPurchase(){
        if($this->getScenario()=="audit"){
            $purchase_type = ExpenseFun::getExpenseTableDetailForIDAndField($this->id,"purchase_type");
            switch ($purchase_type){
                case "A0"://物料采购
                    $purchase_code = ExpenseFun::getExpenseTableDetailForIDAndField($this->id,"purchase_code");
                    $this->tableDetail["purchase_code"] = $purchase_code;
                    if (strpos($purchase_code,'CGDD')!==false){//采购订单
                        $this->jd_curl_type = 6;
                    }else{//采购付款：财务应付
                        $this->jd_curl_type = 7;
                    }
                    $this->status_type = 6;//等待金蝶系统扣款
                    break;
                case "A1"://日常付款
                case "A3"://集团内交易
                    $prepayment = ExpenseFun::getExpenseTableDetailForIDAndField($this->id,"prepayment");
                    $this->tableDetail["prepayment"] = $prepayment;
                    if ($prepayment==1){//付款申请
                        $this->jd_curl_type = 2;
                    }else{//财务应付-保存
                        $this->jd_curl_type = 3;
                    }
                    $this->status_type = 6;//等待金蝶系统扣款
                    break;
                case "A2"://工资薪金社保个税
                case "A4"://集团内资金往来
                case "A5"://同名转账
                case "A6"://客户退款
                case "A7"://税金（包含增值税等，除个税）
                default:
                    $this->status_type = 4;//等待LBS系统填写银行账号
            }
        }
    }
}