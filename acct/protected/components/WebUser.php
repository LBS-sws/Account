<?php
class WebUser extends CWebUser{	public static function getRwFunctionList()	{		$id = Yii::app()->session['system'];		return Yii::app()->session['rw_func'][$id];	}	public function getRoFunctionList()	{		$id = Yii::app()->session['system'];		return Yii::app()->session['ro_func'][$id];	}	public function getCntFunctionList()	{		$id = Yii::app()->session['system'];		return Yii::app()->session['cnt_func'][$id];	}	public function validRWFunction($func_id)	{		$func = $this->getRwFunctionList();		return (strpos($func,$func_id)!==false);	}		public function validFunction($func_id) {		$func = $this->getRwFunctionList().$this->getRoFunctionList().$this->getCntFunctionList();		return (strpos($func,$func_id)!==false);	}		public function validSystem($sys_id) {		$session = Yii::app()->session;		$rw = (!isset($session['rw_func'][$sys_id])) ? false : !empty($session['rw_func'][$sys_id]);		$ro = (!isset($session['ro_func'][$sys_id])) ? false : !empty($session['ro_func'][$sys_id]);		return ($rw || $ro);	}	public function system() {		return Yii::app()->session['system'];	}	public function city() {		return Yii::app()->session['city'];	}		public function city_name() {		return Yii::app()->session['city_name'];	}		public function city_allow() {		return Yii::app()->session['city_allow'];	}		public function user_display_name() {		return Yii::app()->session['disp_name'];	}		public function logon_time() {		return Yii::app()->session['logon_time'];	}		protected function getCity() {		return $this->city();	}		public function email() {		return Yii::app()->session['email'];	}		public function isSingleCity() {		$str = Yii::app()->session['city_allow'];		$items = explode(",",str_replace("'","",$str));		if (($items===false) || empty($items))			return true;		else			return (count($items)<=1);	}		protected function afterLogin($fromCookie)	{		$sesskey = md5(mt_rand());		$user=User::model()->find('LOWER(username)=?',array($this->name));		$city = City::model()->find('code=?',array($user->city));		$city_allow = City::model()->getDescendantList($user->city);		$cstr = $user->city;		$city_allow .= (empty($city_allow)) ? "'$cstr'" : ",'$cstr'";				$session = Yii::app()->session;		$this->getUserOption($user);		$access = $user->accessRights();		if (!empty($access)) {			$session['ro_func'] = $access['read_only'];			$session['rw_func'] = $access['read_write'];			$session['cnt_func'] = $access['control'];		} else {			$session['ro_func'] = array();			$session['rw_func'] = array();			$session['cnt_func'] = array();		}		$session['city'] = $user->city;		$session['city_name'] = $city->name;		$session['city_allow'] = $city_allow;		$session['email'] = $user->email;		$session['session_key'] = $sesskey;		$session['session_time'] = date("Y-m-d H:i:s");		$session['disp_name'] = $user->disp_name;		$session['logon_time'] = $user->logon_time;		User::model()->updateByPk($this->id,			array('logon_time'=>new CDbExpression('NOW()'),				'session_key'=>$sesskey,				'fail_count'=>0,			)		);				$this->writeLoginLog();	}	protected function writeLoginLog() {		$loginlog = new LoginLog;		$loginlog->station_id = isset(Yii::app()->session['station']) ? Yii::app()->session['station'] : 'N/A';		$loginlog->username = $this->name;		$loginlog->client_ip = Yii::app()->request->userHostAddress;		$loginlog->save();	}	
	protected function beforeLogout() {		User::model()->updateByPk($this->id,array('logoff_time'=>new CDbExpression('NOW()'),'session_key'=>''));		return true;	}
	protected function getUserOption($user) {		$options = $user->getUserOption();		if (!empty($options)) {			$session = Yii::app()->session;			foreach ($options as $key=>$value) {				switch ($key) {					case 'lang':						$session['lang'] = $value;						Yii::app()->language = $value;						break;					case 'system':						$session['system'] = $value;						break;				}			}		}	}		public function saveUserOption($name, $key, $value) {		User::model()->saveUserOption($name, $key, $value);	}	public function setUrlAfterLogin() {		$systems = Yii::app()->params['systemMapping'];		$session = Yii::app()->session;		if (isset($session['system'])) {			if (strpos($this->returnUrl,$session['system'])===false) {				$this->returnUrl = $systems[$session['system']]['webroot'];			}		} else {			foreach ($systems as $key=>$value) {				if (strpos($this->returnUrl,$value['webroot'])!==false) {					$session['system'] = $key;					break;				}			}			if (!isset($session['system'])) $session['system'] = Yii::app()->params['systemId'];		}	}}