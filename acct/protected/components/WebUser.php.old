<?php
class WebUser extends CWebUser{	public static function getRwFunctionList()	{		return Yii::app()->session['rw_func'];	}	public function getRoFunctionList()	{		return Yii::app()->session['ro_func'];	}	public function getCntFunctionList()	{		return Yii::app()->session['cnt_func'];	}	public function validRWFunction($func_id)	{		$func = $this->getRwFunctionList();		return (strpos($func,$func_id)!==false);	}		public function validFunction($func_id)	{		$func = $this->getRwFunctionList().$this->getRoFunctionList();		return (strpos($func,$func_id)!==false);	}		public function city() {		return Yii::app()->session['city'];	}		public function city_name() {		return Yii::app()->session['city_name'];	}		public function city_allow() {		return Yii::app()->session['city_allow'];	}		public function user_display_name() {		return Yii::app()->session['disp_name'];	}		public function logon_time() {		return Yii::app()->session['logon_time'];	}		protected function getCity() {		return $this->city();	}		public function email() {		return Yii::app()->session['email'];	}		public function isSingleCity() {		$str = Yii::app()->session['city_allow'];		$items = explode(",",str_replace("'","",$str));		if (($items===false) || empty($items))			return true;		else			return (count($items)<=1);	}		protected function afterLogin($fromCookie)	{		$sesskey = md5(mt_rand());		$user=User::model()->find('LOWER(username)=?',array($this->name));		$city = City::model()->find('code=?',array($user->city));		$city_allow = City::model()->getDescendantList($user->city);		$cstr = $user->city;		$city_allow .= (empty($city_allow)) ? "'$cstr'" : ",'$cstr'";		$gid = $user->group_id;		$group=Group::model()->find('group_id=?',array($gid));				$session = Yii::app()->session;		$this->getUserOption();		if ($group !== null) {			$session['ro_func'] = $group->a_read_only;			$session['rw_func'] = $group->a_read_write;			$session['cnt_func'] = $group->a_control;		} else {			$session['ro_func'] = '';			$session['rw_func'] = '';			$session['cnt_func'] = '';		}		$session['city'] = $user->city;		$session['city_name'] = $city->name;		$session['city_allow'] = $city_allow;		$session['email'] = $user->email;		$session['session_key'] = $sesskey;		$session['session_time'] = date("Y-m-d H:i:s");		$session['disp_name'] = $user->disp_name;		$session['logon_time'] = $user->logon_time;		User::model()->updateByPk($this->id,			array('logon_time'=>new CDbExpression('NOW()'),				'session_key'=>$sesskey,				'fail_count'=>0,			)		);				$this->writeLoginLog();	}	protected function writeLoginLog() {		$loginlog = new LoginLog;		$loginlog->station_id = isset(Yii::app()->session['station']) ? Yii::app()->session['station'] : 'N/A';		$loginlog->username = $this->name;		$loginlog->client_ip = Yii::app()->request->userHostAddress;		$loginlog->save();	}	
	protected function beforeLogout()	{		User::model()->updateByPk($this->id,array('logoff_time'=>new CDbExpression('NOW()'),'session_key'=>''));		return true;	}
	protected function getUserOption()	{		$sql = "select * from swo_user_option where Lower(username)='".$this->name."'";		$rows = Yii::app()->db->createCommand($sql)->queryAll();		if (count($rows) > 0)		{			$session = Yii::app()->session;			foreach ($rows as $row)			{				switch ($row['option_key'])				{					case 'lang':						$session['lang'] = $row['option_value'];						Yii::app()->language = $row['option_value'];						break;				}			}		}	}		public function saveUserOption($name, $key, $value)	{		$connection = Yii::app()->db;		$sql = "replace into swo_user_option 					(username, option_key, option_value)				values					(:username, :option_key, :option_value)			";		$command = $connection->createCommand($sql);		$command->bindParam(':username', $name, PDO::PARAM_STR);		$command->bindParam(':option_key', $key, PDO::PARAM_STR);		$command->bindParam(':option_value', $value, PDO::PARAM_STR);		$command->execute();	}}